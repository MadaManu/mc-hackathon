var client = require("./_client-helper"),
	assert = require('assert');

describe('InvoiceItem -', function() {

	it('should not be able to create an invoice item successfully for an invalid invoice id', function(done) {
		client.invoiceitem.create({
			amount: "1000",
			invoice: "invalid_id",
			description: "Invoice Item1"
		}, function(error, data) {

			if (data) {
				done(new Error("Invoice Item should not exist, but found an invoice item?"));
			}

			assert.equal(error.data.error.code, "object.not.found", "Create InvoiceItem fails with correct error code.");
			assert.equal(error.data.error.message, "Not Found", "Create InvoiceItem fails with correct error message.");
			done();
		});
	});

	it('should not be able to delete an invoice item successfully for an invalid id', function(done) {
		client.invoiceitem.delete("invalid_id", function(error, data) {

			if (data) {
				done(new Error("Invoice Item should not exist, but found an invoice item?"));
			}

			assert.equal(error.data.error.code, "object.not.found", "Delete InvoiceItem fails with correct error code.");
			assert.equal(error.data.error.message, "Not Found", "Delete InvoiceItem fails with correct error message.");
			done();
		});
	});

	it('should retrieve a list of invoice items successfully', function(done) {
		client.invoiceitem.list({
			max: 30
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			assert.equal(data.max, 30, "List InvoiceItem should succeed");
			done();
		});
	});

	it('should not be able to find an invoice item successfully for an invalid id', function(done) {
		client.invoiceitem.find("invalid_id", function(error, data) {

			if (data) {
				done(new Error("Invoice Item should not exist, but found an invoice item?"));
			}

			assert.equal(error.data.error.code, "object.not.found", "Find InvoiceItem fails with correct error code.");
			assert.equal(error.data.error.message, "Not Found", "Find InvoiceItem fails with correct error message.");
			done();
		});
	});

	it('should update an invoice item successfully', function(done) {
		client.invoiceitem.update({
			id: "invalid_id",
			amount: "2000",
			description: "Invoice Item2"
		}, function(error, data) {

			if (data) {
				done(new Error("Invoice Item should not exist, but found an invoice item?"));
			}

			assert.equal(error.data.error.code, "object.not.found", "Update InvoiceItem fails with correct error code.");
			assert.equal(error.data.error.message, "Not Found", "Update InvoiceItem fails with correct error message.");
			done();
		});
	});

});