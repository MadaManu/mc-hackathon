var client = require("./_client-helper"),
	assert = require('assert');

describe('Plan -', function() {

	it('should create a plan successfully', function(done) {
		client.plan.create({
			amount: "1000",
			name: "plan1",
			frequency: "MONTHLY"
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			assert.equal(data.amount.toString(), "1000", "Create Plan fails with correct error code.");
			assert.equal(data.name, "plan1", "Create Plan fails with correct error code.");
			done();
		});
	});

	it('should delete a plan successfully', function(done) {
		client.plan.create({
			amount: "1000",
			name: "plan1",
			frequency: "MONTHLY"
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			// Use id of newly created plan to execute 'delete' request
			client.plan.delete(data.id, function(deleteError, deleteData) {

				if (deleteError) {
					console.error(JSON.stringify(deleteError.data));
					done(deleteError);
				}

				assert.equal(deleteData.id.toString(), data.id.toString(), "Delete Plan of ID '" + data.id + "' should succeed");
				done();
			});
		});
	});

	it('should retrieve a list of plans successfully', function(done) {
		client.plan.list({
			max: 30
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			assert.equal(data.max.toString(), '30', "List Plan succeeds.");
			done();
		});
	});

	it('should find a plan successfully', function(done) {
		client.plan.create({
			amount: "1000",
			name: "plan1",
			frequency: "MONTHLY"
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			// Use id of newly created plan to execute 'find' request
			client.plan.find(data.id, function(findError, findData) {

				if (findError) {
					console.error(JSON.stringify(findError.data));
					done(findError);
				}

				assert.equal(findData.id.toString(), data.id.toString(), "Find Plan of ID '" + data.id + "' should succeeds");
				done();
			});
		});
	});

	it('should update a plan successfully', function(done) {
		client.plan.create({
			amount: "1000",
			name: "plan1",
			frequency: "MONTHLY"
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			// Use id of newly created plan to execute 'update' request
			client.plan.update({
				id: data.id,
				name: "plan2"
			}, function(updateError, updateData) {

				if (updateError) {
					console.error(JSON.stringify(updateError.data));
					done(updateError);
				}

				assert.equal(updateData.name, "plan2", "Update Plan with ID " + data.id + " should succeed");
				done();
			});
		});
	});

});