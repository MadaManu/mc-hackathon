var client = require("./_client-helper"),
	assert = require('assert');

describe('Coupon -', function() {

	it('should create a coupon successfully', function(done) {
		client.coupon.create({
			startDate: "2394829384000",
			description: "20% off!",
			maxRedemptions: "100",
			couponCode: "20off",
			endDate: "64063288800000",
			percentOff: "20"
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			assert.equal(data.id.length > 0, true, "Create a new coupon should succeed");
			done();
		});
	});

	it('should delete a coupon successfully', function(done) {
		client.coupon.create({
			startDate: "2394829384000",
			description: "20% off!",
			maxRedemptions: "100",
			couponCode: "20off",
			endDate: "64063288800000",
			percentOff: "20"
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			// Use id of newly created coupon to execute 'delete' request
			client.coupon.delete(data.id, function(deleteError, deleteData) {

				if (deleteError) {
					console.error(JSON.stringify(deleteError.data));
					done(deleteError);
				}

				assert.equal(deleteData.id, data.id, "Delete Coupon with ID '" + data.id + "' should succeed");
				done();
			});
		});
	});

	it('should retrieve a list of coupons successfully', function(done) {
		client.coupon.list({
			max: 30
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			assert.equal(data.max, 30, "Retrieve a list of coupons should succeed");
			done();
		});
	});

	it('should find a coupon successfully', function(done) {
		client.coupon.create({
			startDate: "2394829384000",
			description: "20% off!",
			maxRedemptions: "100",
			couponCode: "20off",
			endDate: "64063288800000",
			percentOff: "20"
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			// Use id of newly created coupon to execute 'find' request
			client.coupon.find(data.id, function(findError, findData) {

				if (findError) {
					console.error(JSON.stringify(findError.data));
					done(findError);
				}

				assert.equal(findData.id, data.id, "Find coupon of ID '" + data.id + "' should succeed");
				done();
			});
		});
	});

	it('update a coupon successfully', function(done) {
		client.coupon.create({
			startDate: "2394829384000",
			description: "20% off!",
			maxRedemptions: "100",
			couponCode: "20off",
			endDate: "64063288800000",
			percentOff: "20"
		}, function(error, data) {

			if (error) {
				console.error(JSON.stringify(error.data));
				done(error);
			}

			// Use id of newly created coupon to execute 'update' request
			client.coupon.update({
				id: data.id,
				maxRedemptions: "1001",
				endDate: "2394849384000"
			}, function(updateError, updateData) {

				if (updateError) {
					console.error(JSON.stringify(updateError.data));
					done(updateError);
				}

				assert.equal(updateData.maxRedemptions, "1001", "Update Coupon of ID '" + data.id + "' should succeed");
				done();
			});
		});
	});
});